"""users-bookings-rooms-with-nullable

Revision ID: adb2b10f5f30
Revises: 655423d9f1f3
Create Date: 2023-09-13 12:51:22.710665

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'adb2b10f5f30'
down_revision: Union[str, None] = '655423d9f1f3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('rooms', 'hotel_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('rooms', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('rooms', 'price',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('rooms', 'quantity',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('rooms', 'quantity',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('rooms', 'price',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('rooms', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('rooms', 'hotel_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    # ### end Alembic commands ###
